<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.innod</groupId>
	<artifactId>micro-requests</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>µrequests</name>
	<description>µrequests</description>

	<properties>
		<main.verticle>org.innod.requests.verticle.RequestsVerticle</main.verticle>
		<slf4j-api.version>1.7.21</slf4j-api.version>
		<lombok.version>1.16.12</lombok.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-dependencies</artifactId>
				<version>3.0.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>org.innod.requests.Requests</Main-Class>										
									</manifestEntries>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
								</transformer>
							</transformers>
							<artifactSet>
							</artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>openshift</id>
			<properties>
				<fabric8.service.simple.name>micro-requests</fabric8.service.simple.name>
				<fabric8.service.simple.port>8080</fabric8.service.simple.port>
				<fabric8.service.simple.containerPort>8080</fabric8.service.simple.containerPort>
				<fabric8.service.simple.type>LoadBalancer</fabric8.service.simple.type>
				<fabric8.label.service-type>http-endpoint</fabric8.label.service-type>
				<docker.group.name>innod-get-a-pro</docker.group.name>
				<docker.image>${docker.group.name}/${project.artifactId}:${project.version}</docker.image>
				<fabric8.dockerUser>vertx</fabric8.dockerUser>
			</properties>
			
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.15.9</version>
						<configuration>
							<images>
								<image>
									<name>${docker.image}</name>
									<build>
										<from>openjdk:8-jre-alpine</from>
										<tags>
											<tag>latest</tag>
											<tag>${project.version}</tag>
										</tags>
										<workdir>/opt</workdir>
										<entryPoint>
											<exec>
												<arg>java</arg>
												<arg>-jar</arg>
												<arg>${project.artifactId}-${project.version}-fat.jar</arg>
											</exec>
										</entryPoint>
										<runCmds>
											<runcmd>chmod -R 777 /opt</runcmd>
											<runcmd>chmod -R 777 /opt/*</runcmd>
										</runCmds>
										<assembly>
											<basedir>/</basedir>
											<inline>
												<files>
													<file>
														<source>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</source>
														<outputDirectory>/opt</outputDirectory>
														<fileMode>0755</fileMode>
													</file>
												</files>
											</inline>
										</assembly>
									</build>
								</image>
							</images>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>2.2.140</version>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>staging</id>
			<repositories>
				<repository>
					<id>staging</id>
					<url>https://github.com/ginvariant/micro-requests.git</url>
				</repository>
			</repositories>
		</profile>
	</profiles>
</project>